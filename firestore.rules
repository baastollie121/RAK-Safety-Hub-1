rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Helper function to check if the user is the owner of the data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Admins have full access to everything. This rule must be specific enough
    // to not be overridden by more specific rules below if we want admins to have god-mode.
    // However, for better security, we will grant admin access on specific paths
    // and use a wildcard for collections not explicitly defined.

    // Users collection:
    // - Users can read their own document.
    // - Admins can read/write any user document.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isAdmin();
    }

    // Chats collection:
    // A user can read/write their own conversation document and subcollections.
    // Admins can also read/write any chat for support purposes.
    match /chats/{userId}/{document=**} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // Default deny all other collections for non-admins
    match /{path=**}/documents/{document} {
        allow read, write: if isAdmin();
    }
  }
}
