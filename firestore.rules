rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isClientOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Admins have full access to everything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // --- USER Collection ---
    // Clients can read their own user profile data
    match /users/{userId} {
        allow read: if isClientOwner(userId);
        // Allow admins to create/update users (covered by admin rule above)
    }

    // --- CHATS Collection ---
    // Clients can read and write to their own message threads
    match /chats/{userId}/{document=**} {
        allow read, write: if isClientOwner(userId);
    }
    
    // --- NOTIFICATIONS Collection ---
    // Clients can read notifications intended for them
    match /notifications/{notificationId} {
        allow read: if isClientOwner(resource.data.clientUid);
    }
    
    // --- ARTICLES (from localStorage) Collection ---
    // This is managed on the client, so rules are for client access
    match /newsArticles/{articleId} {
        allow read: if request.auth != null; // All authenticated users can read news
        // Write access is handled by admins through a cloud function
    }
    
    // --- EMPLOYEE TRAINING (from localStorage) Collection ---
    // Clients can read and write their own company's training data
    match /employeeTraining/{recordId} {
      allow read, write: if isClientOwner(resource.data.clientUid);
      // Also allow write if creating a new record for their own company
      allow create: if isClientOwner(request.resource.data.clientUid);
    }
  }
}
