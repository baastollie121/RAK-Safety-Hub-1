
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'users' collection
    // Admins can read/write any user document.
    // Authenticated clients can only read/write their own document.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.token.role == 'admin' || request.auth.uid == userId);
      // Writes are handled by the admin cloud function, but allowing client-side updates can be useful for profile changes.
      // For now, we keep it secure and only allow reads. Writes are server-side only.
      allow write: if false;
    }

    // Rules for the 'chats' collection
    match /chats/{userId} {
      // Admins can read any chat document.
      // Clients can create/update their own chat document when starting a conversation.
      allow read, create, update: if request.auth != null && (request.auth.token.role == 'admin' || request.auth.uid == userId);

      // Rules for the 'messages' subcollection within a chat
      match /messages/{messageId} {
        // Admins can read messages from any chat.
        // Clients can only read messages from their own chat.
        allow read: if request.auth != null && (request.auth.token.role == 'admin' || request.auth.uid == userId);
        
        // Admins can write (send) messages to any chat.
        // Clients can only write (send) messages to their own chat.
        allow write: if request.auth != null && (request.auth.token.role == 'admin' || request.auth.uid == userId);
      }
    }
  }
}
