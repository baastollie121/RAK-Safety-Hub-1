
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserRole(role) {
      return request.auth.token.role == role;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isUserAuthenticated();
      allow write: if isUserRole('admin');
      allow create: if isUserRole('admin');
    }

    match /chats/{userId}/{document=**} {
      allow read, write: if isOwner(userId) || isUserRole('admin');
    }
    
    match /generated_documents/{docId} {
      allow read: if isUserAuthenticated() && (resource.data.userId == request.auth.uid || isUserRole('admin'));
      allow create: if isUserAuthenticated();
      allow delete: if isUserAuthenticated() && (resource.data.userId == request.auth.uid || isUserRole('admin'));
    }

    match /core_memory/{docId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isUserRole('admin');
    }

    match /vehicles/{docId} {
      allow read, write: if isUserAuthenticated();
    }
    
    match /assets/{docId} {
      allow read, write: if isUserAuthenticated();
    }
    
    match /employees/{docId} {
      allow read, write: if isUserAuthenticated();
    }

    match /training_courses/{docId} {
        allow read, write: if isUserAuthenticated();
    }
  }
}
